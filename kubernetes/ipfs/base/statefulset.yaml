---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ipfs-cluster
spec:
  replicas: 2
  serviceName: ipfs-cluster
  template:
    spec:
      containers:
      - env:
        - name: IPFS_FD_MAX
          value: "4096"
        image: ipfs/go-ipfs:v0.15.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: swarm
          timeoutSeconds: 5
        name: ipfs
        ports:
        - containerPort: 4001
          name: swarm
          protocol: TCP
        - containerPort: 4002
          name: swarm-udp
          protocol: UDP
        - containerPort: 5001
          name: api
          protocol: TCP
        - containerPort: 8081
          name: ws
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/
          name: ipfs-storage
        - mountPath: /custom
          name: configure-script
      - command:
        - sh
        - /custom/entrypoint.sh
        env:
        - name: BOOTSTRAP_PEER_ID
          valueFrom:
            configMapKeyRef:
              key: bootstrap-peer-id
              name: env-config
        - name: BOOTSTRAP_PEER_PRIV_KEY
          valueFrom:
            secretKeyRef:
              key: bootstrap-peer-priv-key
              name: secret-config
        - name: CLUSTER_SECRET
          valueFrom:
            secretKeyRef:
              key: cluster-secret
              name: secret-config
        - name: CLUSTER_MONITOR_PING_INTERVAL
          value: 3m
        - name: SVC_NAME
          value: head-less-ipfs-cluster
        envFrom:
        - configMapRef:
            name: env-config
        image: ipfs/ipfs-cluster:v1.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: cluster-swarm
          timeoutSeconds: 5
        name: ipfs-cluster
        ports:
        - containerPort: 9094
          name: api-http
          protocol: TCP
        - containerPort: 9095
          name: proxy-http
          protocol: TCP
        - containerPort: 9096
          name: cluster-swarm
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/
          name: cluster-storage
        - mountPath: /custom
          name: configure-script
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - /custom/configure-ipfs.sh
        image: ipfs/go-ipfs:v0.12.2
        imagePullPolicy: IfNotPresent
        name: configure-ipfs
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/
          name: ipfs-storage
        - mountPath: /custom
          name: configure-script
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: ipfs-cluster-set-bootstrap-conf
        name: configure-script
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: cluster-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: do-block-storage
      volumeMode: Filesystem
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: ipfs-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: do-block-storage
      volumeMode: Filesystem
