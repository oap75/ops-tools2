---
rbac:
  create: true
  rules:
    - apiGroups: ["*"]
      resources: ["*"]
      verbs: ["get", "watch", "list"]
  staticGroupName: &static-group-name "botkube-plugins-default"

actions:
  'describe-created-resource':
    enabled: false
    displayName: "Describe created resource"
    command: "kubectl describe {{ .Event.Kind | lower }}{{ if .Event.Namespace }} -n {{ .Event.Namespace }}{{ end }} {{ .Event.Name }}"
    bindings:
      sources:
        - k8s-create-events
      executors:
        - k8s-default-tools
  'show-logs-on-error':
    enabled: false
    displayName: "Show logs on error"
    command: "kubectl logs {{ .Event.Kind | lower }}/{{ .Event.Name }} -n {{ .Event.Namespace }}"
    bindings:
      sources:
        - k8s-err-with-logs-events
      executors:
        - k8s-default-tools

sources:
  'k8s-recommendation-events':
    displayName: "Kubernetes Recommendations"
    botkube/kubernetes:
      context: &default-plugin-context
        rbac:
          group:
            type: Static
            prefix: ""
            static:
              values: [*static-group-name]
      enabled: true
      config:
        namespaces:
          include:
            - ".*"
        recommendations:
          pod:
            noLatestImageTag: true
            labelsSet: true
          ingress:
            backendServiceValid: true
            tlsSecretValid: true

  'k8s-all-events':
    displayName: "Kubernetes Info"
    botkube/kubernetes:
      context: *default-plugin-context
      enabled: true
      config:
        filters:
          objectAnnotationChecker: true
          nodeEventsChecker: true
        namespaces: &k8s-events-namespaces
          include:
            - ".*"
        event:
          types:
            - create
            - delete
          reason:
            include: []
            exclude: []
          message:
            include: []
            exclude: []
        annotations: {}
        labels: {}
        resources:
          - type: v1/pods
          - type: v1/services
          - type: networking.k8s.io/v1/ingresses
          - type: v1/nodes
          - type: v1/namespaces
          - type: v1/persistentvolumes
          - type: v1/persistentvolumeclaims
          - type: v1/configmaps
          - type: rbac.authorization.k8s.io/v1/roles
          - type: rbac.authorization.k8s.io/v1/rolebindings
          - type: rbac.authorization.k8s.io/v1/clusterrolebindings
          - type: rbac.authorization.k8s.io/v1/clusterroles
          - type: apps/v1/daemonsets
            event:
              types:
                - create
                - update
                - delete
                - error
            updateSetting:
              includeDiff: true
              fields:
                - spec.template.spec.containers[*].image
                - status.numberReady
          - type: batch/v1/jobs
            event:
              types:
                - create
                - update
                - delete
                - error
            updateSetting:
              includeDiff: true
              fields:
                - spec.template.spec.containers[*].image
                - status.conditions[*].type
          - type: apps/v1/deployments
            event:
              types:
                - create
                - update
                - delete
                - error
            updateSetting:
              includeDiff: true
              fields:
                - spec.template.spec.containers[*].image
                - status.availableReplicas
          - type: apps/v1/statefulsets
            event:
              types:
                - create
                - update
                - delete
                - error
            updateSetting:
              includeDiff: true
              fields:
                - spec.template.spec.containers[*].image
                - status.readyReplicas

          - type: external-secrets.io/v1beta1/ExternalSecret
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

          - type: external-secrets.io/v1beta1/SecretStore
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

          - type: argoproj.io/v1alpha1/Application
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

          - type: argoproj.io/v1alpha1/AppProject
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

          - type: argoproj.io/v1alpha1/ApplicationSet
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

          - type: autoscaling/v2beta2/HorizontalPodAutoscaler
            namespaces:
              include:
                - ".*"
              exclude:
                -
            event:
              types:
                - create
                - update
                - delete
                - error

  'k8s-err-events':
    displayName: "Kubernetes Errors"
    botkube/kubernetes:
      context: *default-plugin-context
      enabled: true
      config:
        namespaces: *k8s-events-namespaces
        event:
          types:
            - error
        resources:
          - type: v1/services
          - type: networking.k8s.io/v1/ingresses
          - type: v1/nodes
          - type: v1/namespaces
          - type: v1/persistentvolumes
          - type: v1/persistentvolumeclaims
          - type: v1/configmaps
          - type: rbac.authorization.k8s.io/v1/roles
          - type: rbac.authorization.k8s.io/v1/rolebindings
          - type: rbac.authorization.k8s.io/v1/clusterrolebindings
          - type: rbac.authorization.k8s.io/v1/clusterroles
          - type: apps/v1/deployments
          - type: apps/v1/statefulsets
          - type: apps/v1/daemonsets
          - type: batch/v1/jobs

  'k8s-err-with-logs-events':
    displayName: "Kubernetes Errors for resources with logs"
    botkube/kubernetes:
      context: *default-plugin-context
      enabled: true
      config:
        namespaces: *k8s-events-namespaces
        event:
          types:
            - error
        resources:
          - type: apps/v1/deployments
          - type: apps/v1/statefulsets
          - type: apps/v1/daemonsets
          - type: batch/v1/jobs

  'k8s-create-events':
    displayName: "Kubernetes Resource Created Events"
    botkube/kubernetes:
      context: *default-plugin-context
      enabled: true
      config:
        namespaces: *k8s-events-namespaces
        event:
          types:
            - create
        resources:
          - type: v1/pods
          - type: v1/services
          - type: networking.k8s.io/v1/ingresses
          - type: v1/nodes
          - type: v1/namespaces
          - type: v1/configmaps
          - type: apps/v1/deployments
          - type: apps/v1/statefulsets
          - type: apps/v1/daemonsets
          - type: batch/v1/jobs


executors:
  kubectl-read-only:
    botkube/kubectl:
      enabled: true
      config:
        defaultNamespace: "default"
        log:
          level: "info"
        interactiveBuilder:
          allowed:
            namespaces: []
            verbs: ["api-resources", "api-versions", "cluster-info", "describe", "explain", "get", "logs", "top", "auth", "networking.k8s.io/v1", "argoproj.io/v1alpha1", "external-secrets.io/v1beta1", "autoscaling/v2beta2"]
            resources: ["deployments", "pods", "namespaces", "daemonsets", "statefulsets", "storageclasses", "nodes", "configmaps", "services", "ingresses", "replicasets", "cronjobs", "jobs", "HorizontalPodAutoscaler", "Application", "ExternalSecret", "SecretStore", "hpa", "AppProject", "ApplicationSet", "applications", "applicationsets", "appprojects"]
      context: *default-plugin-context

existingCommunicationsSecretName: "botkube-secret"

settings:
  clusterName: runners

serviceMonitor:
  enabled: false
